#!/usr/bin/env node

// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

const { spawn } = require('child_process')

process.stdout.write('["log", "Clouseau starting...", {"level": "info"}]\n')

const clouseauProcess = spawn('mvn', ['scala:run', '-DaddArgs=""|clouseau.name=clouseau1@127.0.0.1|clouseau.cookie=monster|clouseau.dir=target/indexes'], { cwd: '/opt/clouseau', shell: false })

function bufferToCleanStr (string) {
  return string.toString().replace(/"|\\|\n|\r/g, '').replace(/\[INFO\]|\[ERROR\]|\[WARNING\]/g, '')
}

clouseauProcess.stdout.on('data', data => {
  let res = bufferToCleanStr(data)
  if (res.length > 0) {
    process.stdout.write(`["log", "${res}", {"level": "info"}]` + '\n')
  }
})

clouseauProcess.stderr.on('data', data => {
  process.stdout.write(`["log", "${bufferToCleanStr(data)}", {"level": "error"}]` + '\n')
})

clouseauProcess.on('close', code => {
  process.stdout.write(`["log", "clouseau exited with code ${code}", {"level": "error"}]` + '\n')
})
